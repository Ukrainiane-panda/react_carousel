{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","itemIndex","handleNext","props","images","frameSize","step","lastInd","length","nextInd","setState","handlePrev","this","itemWidth","animationDuration","infinity","prevDisabled","nextDisabled","className","style","width","transition","map","img","ind","transform","src","alt","type","disabled","onClick","Component","App","handleChange","event","target","name","value","checked","inputValue","prevState","htmlFor","id","min","max","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.428b12ef.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\ninterface State {\n  itemIndex: number,\n}\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    itemIndex: 0,\n  };\n\n  handleNext = () => {\n    const { images, frameSize, step } = this.props;\n    const { itemIndex } = this.state;\n    const firstInd = 0;\n    const lastInd = images.length - frameSize;\n    let nextInd = itemIndex + step;\n\n    if (itemIndex === lastInd) {\n      nextInd = firstInd;\n    } else if (nextInd > lastInd) {\n      nextInd = lastInd;\n    }\n\n    this.setState({ itemIndex: nextInd });\n  };\n\n  handlePrev = () => {\n    const { images, frameSize, step } = this.props;\n    const { itemIndex } = this.state;\n    const firstInd = 0;\n    const lastInd = images.length - frameSize;\n    let nextInd = itemIndex - step;\n\n    if (itemIndex === firstInd) {\n      nextInd = lastInd;\n    } else if (nextInd < firstInd) {\n      nextInd = firstInd;\n    }\n\n    this.setState({ itemIndex: nextInd });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { itemIndex } = this.state;\n    const prevDisabled = (itemIndex <= 0) && !infinity;\n    const nextDisabled = (itemIndex >= images.length - frameSize) && !infinity;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n        >\n          {\n            images.map((img, ind) => {\n              return (\n                <li\n                  key={img}\n                  className=\"Carusel__item\"\n                  style={{\n                    transform: `translateX(${-itemIndex * itemWidth}px)`,\n                    transition: `${animationDuration}ms`,\n                  }}\n                >\n                  <img\n                    src={img}\n                    alt={`${ind + 1}`}\n                    width={itemWidth}\n                  />\n                </li>\n              );\n            })\n          }\n        </ul>\n\n        <div className=\"button\">\n          <button\n            type=\"button\"\n            className=\"button__nav\"\n            disabled={prevDisabled}\n            onClick={this.handlePrev}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className=\"button__nav\"\n            disabled={nextDisabled}\n            onClick={this.handleNext}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinity: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      type,\n      value,\n      checked,\n    } = event.target;\n    const inputValue = type === 'checkbox' ? checked : +value;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: inputValue,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\" className=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n\n        <label\n          htmlFor=\"itemId\"\n          className=\"label\"\n        >\n          Item Width:\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            name=\"itemWidth\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label\n          htmlFor=\"frameId\"\n          className=\"label\"\n        >\n          Frame Size:\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            name=\"frameSize\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label\n          htmlFor=\"stepId\"\n          className=\"label\"\n        >\n          Step:\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            name=\"step\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label\n          htmlFor=\"animationId\"\n          className=\"label\"\n        >\n          Animation Duration:\n          <input\n            type=\"number\"\n            id=\"animationId\"\n            name=\"animationDuration\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label\n          htmlFor=\"infinityId\"\n          className=\"label\"\n        >\n          Infinite:\n          <input\n            type=\"checkbox\"\n            name=\"checkbox\"\n            id=\"infinityId\"\n            onChange={this.handleChange}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}